[project]
name = "django-view-decorator"
description = 'django-view-decorator is decorator aimed at bringing locality of behaviour to the connection between a URL and a view in Django.'
readme = "README.md"
requires-python = ">=3.10"
keywords = []
authors = [
  { name = "Víðir Valberg Guðmundsson", email = "valberg@orn.li" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "Django>=3.2",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://django-view-decorator.readthedocs.io/"
Issues = "https://github.com/valberg/django-view-decorator/issues"
Source = "https://github.com/valberg/django-view-decorator"


[tool.uv]
dev-dependencies = [
  "coverage[toml]==7.2.1",
  "pytest==7.2.2",
  "pytest-cov",
  "pytest-django==4.5.2",
  "mypy==1.1.1",
  "django-stubs==1.16.0",
]

[[tool.hatch.envs.tests.matrix]]
python = ["3.10", "3.11", "3.12"]
django = ["3.2", "4.1", "4.2", "5.0", ]

[tool.hatch.envs.tests.overrides]
matrix.django.dependencies = [
    { value = "django~={matrix:django}" },
]
matrix.python.dependencies = [
    { value = "typing_extensions==4.5.0", if = ["3.10"]},
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=django_view_decorator --cov=tests --cov=append {args}"
no-cov = "cov --no-cov {args}"
typecheck = "mypy --config-file=pyproject.toml ."


[tool.hatch.envs.docs]
dependencies = [
    "sphinx==6.1.3",
    "sphinx-autobuild==2021.3.14",
    "furo==2022.12.7",
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs docs/_build/html"
serve = "sphinx-autobuild -b html docs docs/_build/html"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE="tests.settings"
addopts = "--reuse-db"
norecursedirs = "build dist docs .eggs/* *.egg-info htmlcov django_view_decorator .git"
python_files = "test*.py"
testpaths = "tests"
pythonpath = ". tests"

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "django_view_decorator/__about__.py",
  "tests/manage.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
mypy_path = "django_view_decorator/"
exclude = [
    "venv/",
    "dist/",
    "docs/",
]
namespace_packages = false
show_error_codes = true
strict = true
warn_unreachable = true
follow_imports = "normal"
#plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
#django_settings_module = "tests.settings"

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true
